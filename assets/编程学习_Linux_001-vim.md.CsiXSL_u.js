import{_ as o,c as a,o as d,al as c}from"./chunks/framework.CUdGzYwH.js";const r="/yuyou-notes/assets/vim_model.KEGR0W_Z.png",m=JSON.parse('{"title":"vim","description":"","frontmatter":{},"headers":[],"relativePath":"编程学习/Linux/001-vim.md","filePath":"编程学习/Linux/001-vim.md","lastUpdated":1741623681000}'),t={name:"编程学习/Linux/001-vim.md"};function i(l,e,h,n,s,p){return d(),a("div",null,[...e[0]||(e[0]=[c('<h1 id="vim" tabindex="-1">vim <a class="header-anchor" href="#vim" aria-label="Permalink to &quot;vim&quot;">​</a></h1><h2 id="三种模式" tabindex="-1">三种模式 <a class="header-anchor" href="#三种模式" aria-label="Permalink to &quot;三种模式&quot;">​</a></h2><h3 id="命令模式-normal" tabindex="-1">命令模式/normal <a class="header-anchor" href="#命令模式-normal" aria-label="Permalink to &quot;命令模式/normal&quot;">​</a></h3><h5 id="移动光标" tabindex="-1">移动光标 <a class="header-anchor" href="#移动光标" aria-label="Permalink to &quot;移动光标&quot;">​</a></h5><p><code>h</code> <code>j</code> <code>k</code> <code>l</code> 控制光标移动（前/下/上/后） <code>^</code> /<code>$</code> 行首/行尾 <code>w</code>向后移动一个单词，到下一个单词开头 <code>e</code>向后移动一个单词，到当前单词的结尾 <code>0</code>行首</p><p><code>yy</code> 复制内容 <code>p</code> 粘贴内容</p><h5 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h5><p><code>dd</code> 删除整行内容 <code>x</code> 删除单个字 <code>dw</code>删除单词 <code>d$</code>删除从光标到行末</p><h5 id="撤销" tabindex="-1">撤销 <a class="header-anchor" href="#撤销" aria-label="Permalink to &quot;撤销&quot;">​</a></h5><p><code>u</code> (undo)撤销 <code>U</code>撤销整行的修改 <code>ctrl+R</code>取消撤销</p><h5 id="替换" tabindex="-1">替换 <a class="header-anchor" href="#替换" aria-label="Permalink to &quot;替换&quot;">​</a></h5><p><code>r + 要替换的内容</code></p><h5 id="更改" tabindex="-1">更改 <a class="header-anchor" href="#更改" aria-label="Permalink to &quot;更改&quot;">​</a></h5><p><code>cw</code>删除当前光标后面的单词，并进入插入模式</p><h5 id="快速移动行" tabindex="-1">快速移动行 <a class="header-anchor" href="#快速移动行" aria-label="Permalink to &quot;快速移动行&quot;">​</a></h5><p><code>ctrl + g</code>显示文件信息及行号 <code>G</code> 最后一行 <code>gg</code> 第一行 <code>100G</code> / <code>：100</code> 跳转到第一百行 <code>ctrl + O</code>回到上次的行 <code>ctrl + I</code>回到最新的行</p><h5 id="查找" tabindex="-1">查找 <a class="header-anchor" href="#查找" aria-label="Permalink to &quot;查找&quot;">​</a></h5><p><code>/要查找的内容</code> 向下查找 <code>？要查找的内容</code> 向上查找 <code>/hello\\c</code> / <code>：set ic</code> 不区分大小写查找</p><h5 id="括号的匹配" tabindex="-1">括号的匹配 <a class="header-anchor" href="#括号的匹配" aria-label="Permalink to &quot;括号的匹配&quot;">​</a></h5><p><code>%</code></p><h5 id="v-可视化" tabindex="-1">V 可视化 <a class="header-anchor" href="#v-可视化" aria-label="Permalink to &quot;V 可视化&quot;">​</a></h5><p>v 选择 V 行选择 ^v 块选择</p><h5 id="改变大小写" tabindex="-1">改变大小写 <a class="header-anchor" href="#改变大小写" aria-label="Permalink to &quot;改变大小写&quot;">​</a></h5><p>u 变小写 U 变大写 ～反转大小写</p><p><code>Ctrl</code> + <code>f</code> 向前翻页 <code>Ctrl</code> + <code>b</code> 向后翻页 <code>Ctrl</code> + <code>u</code> 向上翻半页 <code>Ctrl</code> + <code>d</code> 向下翻半页 <code>vi .vimrc</code> 设置默认操作</p><h3 id="插入模式" tabindex="-1">插入模式 <a class="header-anchor" href="#插入模式" aria-label="Permalink to &quot;插入模式&quot;">​</a></h3><p>iI：光标前/行首 aA：光标后/行尾 oO:上一行/下一行</p><h3 id="尾行模式" tabindex="-1">尾行模式 <a class="header-anchor" href="#尾行模式" aria-label="Permalink to &quot;尾行模式&quot;">​</a></h3><p><code>：set number</code> / <code>：set nu</code> 显示行号 <code>：set nonumber</code> 关闭行号</p><h5 id="替换-1" tabindex="-1">替换 <a class="header-anchor" href="#替换-1" aria-label="Permalink to &quot;替换&quot;">​</a></h5><p><code>:1,5s/要替换的内容/替换后的内容/g</code> 替换 1 到 5 行 <code>g</code> 全局替换 <code>:%1,$%s/要替换的内容/替换后的内容/g</code> 全部替换 <code>:%1,$%s/要替换的内容/替换后的内容/gc</code> 对每一个提示是否替换 <code>：r filename</code>写入文件 <code>：w filename</code>存入文件 <code>sp</code>分屏 <code>vsp</code>分屏 <code>^w w</code>切换窗口 <code>^w r</code>交换窗口 <code>^w c</code>关闭窗口</p><p><img src="'+r+'" alt=""></p>',32)])])}const b=o(t,[["render",i]]);export{m as __pageData,b as default};
